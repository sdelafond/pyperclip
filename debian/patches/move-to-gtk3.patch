Description: Switch from GTK+2 to GTK+3 to avoid import of mutually exclusive
  modules that resulted in the following error:
  AttributeError: When using gi.repository you must not import static modules like
  "gobject". Please change all occurrences of "import gobject" to
  "from gi.repository import GObject". See:
  https://bugzilla.gnome.org/show_bug.cgi?id=709183
Author: Corey Bryant <corey.bryant@canonical.com>
Bug-Ubuntu: https://bugs.launchpad.net/bugs/1722553
Origin: https://github.com/asweigart/pyperclip/pull/111
Forwarded: yes

diff --git a/pyperclip/__init__.py b/pyperclip/__init__.py
index 3d701f5..9b5d35c 100644
--- a/pyperclip/__init__.py
+++ b/pyperclip/__init__.py
@@ -20,7 +20,8 @@ On Linux, install xclip or xsel via package manager. For example, in Debian:
     sudo apt-get install xclip
     sudo apt-get install xsel
 
-Otherwise on Linux, you will need the gtk or PyQt5/PyQt4 modules installed.
+Otherwise on Linux, you will need the gi (GTK+ 3) or PyQt5/PyQt4 modules installed.
+gtk (GTK +2) is still supported as an older alternative to gi.
 
 gtk and PyQt4 modules are not available for Python 3,
 and this module does not work with PyGObject yet.
@@ -141,7 +142,6 @@ def init_gtk_clipboard():
     import gtk
 
     def copy_gtk(text):
-        global cb
         text = _stringifyText(text) # Converts non-str values to str.
         cb = gtk.Clipboard()
         cb.set_text(text)
@@ -158,6 +158,28 @@ def init_gtk_clipboard():
     return copy_gtk, paste_gtk
 
 
+def init_gi_clipboard():
+    import gi
+    gi.require_version('Gtk', '3.0')
+    from gi.repository import Gtk, Gdk
+    cb = Gtk.Clipboard.get(Gdk.SELECTION_CLIPBOARD)
+
+    def copy_gi(text):
+        text = _stringifyText(text) # Converts non-str values to str.
+        cb.set_text(text, -1)
+        cb.store()
+
+    def paste_gi():
+        clipboardContents = cb.wait_for_text()
+        # for python 2, returns None if the clipboard is blank.
+        if clipboardContents is None:
+            return ''
+        else:
+            return clipboardContents
+
+    return copy_gi, paste_gi
+
+
 def init_qt_clipboard():
     global QApplication
     # $DISPLAY should exist
@@ -519,11 +540,18 @@ def determine_clipboard():
     # Setup for the LINUX platform:
     if HAS_DISPLAY:
         try:
-            import gtk  # check if gtk is installed
+            import gi  # check if gi is installed (for GTK+ 3)
         except ImportError:
-            pass # We want to fail fast for all non-ImportError exceptions.
+            try:
+                import gtk  # check if gtk is installed (fallback to GTK+ 2)
+            except ImportError:
+                pass # We want to fail fast for all non-ImportError exceptions.
+            else:
+                return init_gtk_clipboard()
         else:
-            return init_gtk_clipboard()
+            if gi.version_info[0] >= 3:
+                return init_gi_clipboard()
+            pass
 
         if _executable_exists("xsel"):
             return init_xsel_clipboard()
@@ -576,6 +604,7 @@ def set_clipboard(clipboard):
     clipboard_types = {'pbcopy': init_osx_pbcopy_clipboard,
                        'pyobjc': init_osx_pyobjc_clipboard,
                        'gtk': init_gtk_clipboard,
+                       'gi': init_gi_clipboard,
                        'qt': init_qt_clipboard, # TODO - split this into 'qtpy', 'pyqt4', and 'pyqt5'
                        'xclip': init_xclip_clipboard,
                        'xsel': init_xsel_clipboard,
